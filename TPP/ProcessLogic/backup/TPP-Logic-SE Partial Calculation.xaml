<Activity mc:Ignorable="sap sap2010" x:Class="TPP_Logic_SE_Partial_Calculation" this:TPP_Logic_SE_Partial_Calculation.StrTimePlanFolderPath="C:\Users\adharshgm\Documents\UiPath\TimePlanPreparation\Output\BL\BL2\" this:TPP_Logic_SE_Partial_Calculation.StrPartialCalulatorTemplatePath="C:\Users\adharshgm\Documents\UiPath\TimePlanPreparation\Template\BL\BL-PartialCalculator.xlsm" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="DicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="StrTimePlanFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="DtSEPendingRecord" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="StrPartialCalulatorTemplatePath" Type="InArgument(x:String)" />
    <x:Property Name="strCurrentShift" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1440,7760</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TPP_Cutting_List_Extraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Get Previous shift Time Plan for SE-Line and Calculate the Pending Records&#xA;&#xA;Pre Condition: N/A&#xA;Post Condtion: N/A" DisplayName="TPP-Logic-SE Partial Calculation" sap:VirtualizedContainerService.HintSize="1450,7595" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="TPP-Logic-SE Partial Calculation" Name="strComponentName" />
      <Variable x:TypeArguments="x:Boolean" Name="bolPathExist" />
      <Variable x:TypeArguments="x:String" Name="strTPPFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dtPendingDetails" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dtTemp" />
      <Variable x:TypeArguments="sd:DataRow" Name="dtrPending" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dtOutputTemp" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbPreviousShiftTPPInstance" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1408,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;TPP-Logic-SE Partial Calculation Started&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1408,7169" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="DateTime.Parse(DicConfig(&quot;RunDate&quot;).ToString)" Default="[DateTime.Parse(DicConfig(&quot;RunDate&quot;).ToString)]" Name="RunDate" />
        <Variable x:TypeArguments="x:String" Default="[DicConfig(&quot;TimePlanDirectoryPath&quot;).ToString]" Name="strTimePlanDirectoryPath" />
        <Variable x:TypeArguments="x:String" Default="SE" Name="strMachineLine" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="SQ Partial Calculation" sap:VirtualizedContainerService.HintSize="1370,6942" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Pre Condition" sap:VirtualizedContainerService.HintSize="1328,1085" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="771,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EXCEL" />
            <Assign DisplayName="Assign DtSQPendingRecord" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[DtSEPendingRecord]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[new DataTable()]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[strTimePlanDirectoryPath&lt;&gt;String.Empty]" DisplayName="If StrTimePlanFolderPath is not Empty?" sap:VirtualizedContainerService.HintSize="771,577" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Cutting List File Path Validation" sap:VirtualizedContainerService.HintSize="526,429" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="variable1" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:PathExists DisplayName="Path Exists" Exists="[bolPathExist]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[String.Format(strTimePlanDirectoryPath,RunDate.ToString(&quot;yyyy&quot;),rundate.ToString(&quot;MM MMMMMM&quot;),strMachineLine,&quot;&quot;)]" PathType="Folder">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:PathExists>
                  <If Condition="[bolPathExist]" DisplayName="If StrCuttingListFilePath Exist?" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Throw DisplayName="Throw - Ex" Exception="[New Exception(&quot;Incorrect TP folder Path - &quot;+String.Format(strTimePlanDirectoryPath,RunDate.ToString(&quot;yyyy&quot;),rundate.ToString(&quot;MM MMMMMM&quot;),strMachineLine,&quot;&quot;))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw - Ex" Exception="[New Exception(&quot; TPP folder Path is Empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Else>
            </If>
            <If Condition="[StrPartialCalulatorTemplatePath&lt;&gt;String.Empty]" DisplayName="If StrPartialCalulatorTemplatePath is Empty" sap:VirtualizedContainerService.HintSize="771,214" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence DisplayName="Partial Calculator File Path Validation" sap:VirtualizedContainerService.HintSize="526,429" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:PathExists DisplayName="Path Exists" Exists="[bolPathExist]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[StrPartialCalulatorTemplatePath]" PathType="File">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:PathExists>
                  <If Condition="[bolPathExist]" DisplayName="If StrCuttingListFilePath Exist?" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Throw DisplayName="Throw - Ex" Exception="[New Exception(&quot;Incorrect SE Line Partial Calculator folder Path - &quot;+StrPartialCalulatorTemplatePath)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw - SysEx" Exception="[New Exception(&quot;StrPartialCalulatorTemplatePath is Empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
              </If.Else>
            </If>
          </Sequence>
          <Sequence DisplayName="Work" sap:VirtualizedContainerService.HintSize="1328,5488" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="True" sap:VirtualizedContainerService.HintSize="1286,5396" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="907,5248" sap2010:WorkflowViewState.IdRef="Sequence_31">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Default="[DicConfig(&quot;PrevShiftFileNamesLogPath&quot;).ToString]" Name="strPrevShiftFileNamesLogPath" />
                    <Variable x:TypeArguments="x:String" Name="strCurrentRunDetails" />
                    <Variable x:TypeArguments="x:String" Name="strPreviousRunDetails" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="865,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadCell Cell="B4" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="[strMachineLine]" WorkbookPath="[strPrevShiftFileNamesLogPath]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[strCurrentRunDetails]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="865,257" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadCell Cell="B5" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadCell_2" SheetName="[strMachineLine]" WorkbookPath="[strPrevShiftFileNamesLogPath]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[strPreviousRunDetails]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="865,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="755,326" sap2010:WorkflowViewState.IdRef="Sequence_36">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[strCurrentRunDetails=strPreviousRunDetails]" sap:VirtualizedContainerService.HintSize="713,234" sap2010:WorkflowViewState.IdRef="If_11">
                          <If.Then>
                            <ui:ReadCell Cell="B3" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadCell_3" SheetName="[strMachineLine]" WorkbookPath="[strPrevShiftFileNamesLogPath]">
                              <ui:ReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[strTPPFilePath]</OutArgument>
                              </ui:ReadCell.Result>
                            </ui:ReadCell>
                          </If.Then>
                          <If.Else>
                            <ui:ReadCell Cell="B2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadCell_4" SheetName="[strMachineLine]" WorkbookPath="[strPrevShiftFileNamesLogPath]">
                              <ui:ReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[strTPPFilePath]</OutArgument>
                              </ui:ReadCell.Result>
                            </ui:ReadCell>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="865,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign strTPPFilePath" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strTPPFilePath]</OutArgument>
                          </Assign.To>
                        </Assign>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke TPP Logic Previous Shit File Locator workflow" sap:VirtualizedContainerService.HintSize="865,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\TPP Logic Previous Shit File Locator.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="StrCurrentShift">[strCurrentShift]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="StrLineName">[strMachineLine]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="StrTimePlanDirectoryFolderPath">[dicConfig("TimePlanDirectoryPath").ToString]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="strPrevShiftFileName">[strTPPFilePath]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="strMefileDirectory">[dicConfig("METimePlanDirectoryPath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="strPreviousShiftFileNameLocator">[dicConfig("PreviousShiftFileLocator").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="strDate" />
                      <InArgument x:TypeArguments="s:DateTime" x:Key="strRunDate">[DateTime.Parse(dicConfig("RunDate").ToString)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="865,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Previous Shift TPP Path - &quot;+strTPPFilePath]" />
                  <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="865,22" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="excel" />
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="865,322" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="[strTPPFilePath]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,213" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                          <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_2" MacroName="ClearPendingDetails" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Macro Retry workflow" sap:VirtualizedContainerService.HintSize="865,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\Macro Retry.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:TimeSpan" x:Key="Macro_Timeout">00:00:30</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="File_Name">[strTPPFilePath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Macro_Name">ClearPendingDetails</InArgument>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="Macro_Parameters" />
                      <OutArgument x:TypeArguments="x:String" x:Key="Out_Sheet_Name" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <TryCatch DisplayName="Try Catch - Excel Retry" sap:VirtualizedContainerService.HintSize="865,351" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" Visible="False" Workbook="[wbPreviousShiftTPPInstance]" WorkbookPath="[strTPPFilePath]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelApplicationScope>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3">
                            <ui:RetryScope.ActivityBody>
                              <ActivityAction>
                                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Excel Exception Occured - Retry Excel Scope&quot;]" />
                                  <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
                                  <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" Workbook="[wbPreviousShiftTPPInstance]" WorkbookPath="[strTPPFilePath]">
                                    <ui:ExcelApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                        </ActivityAction.Argument>
                                      </ActivityAction>
                                    </ui:ExcelApplicationScope.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelApplicationScope>
                                </Sequence>
                              </ActivityAction>
                            </ui:RetryScope.ActivityBody>
                            <ui:RetryScope.Condition>
                              <ActivityFunc x:TypeArguments="x:Boolean" />
                            </ui:RetryScope.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:RetryScope>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" ExistingWorkbook="[wbPreviousShiftTPPInstance]" sap:VirtualizedContainerService.HintSize="865,3336" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="831,3227" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="789,229" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="ClearPendingDetails" />
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[dtTemp]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="789,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Pending">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                          <ui:ClearDataTable DataTable="[dtTemp]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;&quot;}]" DataTable="[dtTemp]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                          <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[dtrPending]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtTemp(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:RemoveDataRow Row="{x:Null}" DataTable="[dtTemp]" DisplayName="Remove Data Row" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="0" />
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[dtPendingDetails]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="789,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="Pending">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="789,2031" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[StrPartialCalulatorTemplatePath]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="755,1922" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtPendingDetails]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="713,1830" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="663,1683" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="621,285" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dtrPending.Table.Columns]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="sd:DataColumn">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Object">[dtrPending(item.ColumnName)]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Object">[row(item.ColumnName)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                          </ui:ForEach>
                                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[dtrPending]" DataTable="[dtTemp]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="621,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="621,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Partial Left for the Unit No: &quot;+row(&quot;UnitNumber&quot;).ToString+&quot;And Variance Percentage - &quot;+row(&quot;PerVariance&quot;).ToString]" />
                                          <If Condition="[CDec(row(&quot;PerVariance&quot;))&gt;0 and CDec(row(&quot;PerVariance&quot;))&lt;85]" DisplayName="If Variance is Less than 85%?" sap:VirtualizedContainerService.HintSize="621,1011" sap2010:WorkflowViewState.IdRef="If_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="476,864" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Partial Left for the Unit No: &quot;+row(&quot;UnitNumber&quot;).ToString]" />
                                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtTemp]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="AA6:CA6" />
                                                <ui:ExcelWriteCell Cell="F2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="[dtTemp(0)(&quot;ActualCuts&quot;).ToString]" />
                                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtOutputTemp]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="AA3:BB3" SheetName="Sheet1" />
                                                <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" ExistingWorkbook="[wbPreviousShiftTPPInstance]" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000">
                                                  <ui:ExcelApplicationScope.Body>
                                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:ExcelAppendRange DataTable="[dtOutputTemp]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_2" SheetName="PendingDetails" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ExcelApplicationScope.Body>
                                                </ui:ExcelApplicationScope>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                          <ui:RemoveDataRow Row="{x:Null}" DataTable="[dtTemp]" DisplayName="Remove Data Row" sap:VirtualizedContainerService.HintSize="621,22" sap2010:WorkflowViewState.IdRef="RemoveDataRow_2" RowIndex="0" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[DtSEPendingRecord]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="789,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="PendingDetails">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="789,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="789,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[wbPreviousShiftTPPInstance]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;There are Previous Shift TPP available in folder - &quot;+StrTimePlanFolderPath]" />
              </If.Else>
            </If>
          </Sequence>
          <Sequence DisplayName="Post Condition" sap:VirtualizedContainerService.HintSize="1328,66" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[DtSEPendingRecord.Rows.Count&gt;0]" DisplayName="If Cutting List Contains Data?" sap:VirtualizedContainerService.HintSize="755,431" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[New Exception(&quot;Previous Shift Pending Records Count is &quot;+DtSEPendingRecord.Rows.Count.ToString+&quot; for SE Line, File Path - &quot;+strTPPFilePath)]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="No Pending Records" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[New Exception(&quot;Previous Shift Pending Records Count is &quot;+DtSEPendingRecord.Rows.Count.ToString+&quot; for SE Line, File Path - &quot;+strTPPFilePath)]" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[DtSEPendingRecord]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[New DataTable()]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1328,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;TPP-Logic-SE Partial Calculation Completed Successfully&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1374,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[strComponentName+&quot; Failed, Exception Details : &quot;+exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Throw DisplayName="Throw - SysEX" Exception="[New Exception(strComponentName+&quot; Failed, Exception Details : &quot;+exception.Message)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1408,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;TPP-Logic-SE Partial Calculation Ended&quot;]" />
  </Sequence>
</Activity>