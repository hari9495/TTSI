<Activity mc:Ignorable="sap sap2010" x:Class="AP_Logic_BOE_To_Excel" this:AP_Logic_BOE_To_Excel.strBOEFileConvertor="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Data\Template\Invoice Convertor\BOE.xlsm" this:AP_Logic_BOE_To_Excel.strBOEExcelFolderPath="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Data\Input\NSC\BOE\Excel" this:AP_Logic_BOE_To_Excel.strTempIndividualPDFPGFolderPath="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Data\Input\NSC\BOE\PDF\Temp" this:AP_Logic_BOE_To_Excel.strBOEPDFfolder="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Data\Input\NSC\BOE\PDF" this:AP_Logic_BOE_To_Excel.strBOEPdfConvertedFolder="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Data\Input\NSC\BOE\PDF\Converted" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="clr-namespace:PDFtoExcel;assembly=PDFExcelFile" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Path to BOE master template into which individual BOE pages are extracted." Name="strBOEFileConvertor" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Folder where individual BOE pages are extracted" Name="strBOEExcelFolderPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Folder where individual BOE PDF paes are extracted as PDF" Name="strTempIndividualPDFPGFolderPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Folder where BOE pdf to be processed are placed" Name="strBOEPDFfolder" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Folder to which processed BOE pdf are moved" Name="strBOEPdfConvertedFolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>934,6512</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AP_Logic_BOE_To_Excel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>PDFtoExcel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>PDFExcelFile</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This XAML  scans BOE folder  and converts the BOE pdf to excel and extracts the BOE unstructured data to a structured format for further processing&#xA;i.An additional package named PDF toExcel is used to convert the pdf to an excel file.&#xA;ii.Each pdf page is individually saved as a pdf and converted to excel,finally all individual extracted BOE excel is extracted and combined into a excel file and data is extracted by executing a 2 macros &#xA;               a.BOE_Extract:Macro  scans through each page of BOE and extracts essential info of each coil such as Specification,Price ,HSN,Net wt etc &#xA;               b.DutyMacro  scans through each page of BOE and extracts essential duty info such as taxes BCD,SWS,IGST" DisplayName="AP_Logic_BOE_To_Excel" sap:VirtualizedContainerService.HintSize="839,6447" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="strArrFileList" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\issac\Documents\BOE\444493425062021INKAT1BE1290620212228.pdf" Name="strBOEPDFName" />
      <Variable x:TypeArguments="x:String" Name="strBOEExcelFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolFolderExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Check If Temp File For PDF Extraction Exists at &quot; &amp; strTempIndividualPDFPGFolderPath]" />
    <ui:PathExists DisplayName="Path Exists" Exists="[BoolFolderExists]" sap:VirtualizedContainerService.HintSize="797,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[strTempIndividualPDFPGFolderPath]" PathType="Folder" />
    <If Condition="[BoolFolderExists]" sap:VirtualizedContainerService.HintSize="797,710" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,552" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Deleting Temporary BOE Pdf extraction file at &quot;&amp; strTempIndividualPDFPGFolderPath]" />
          <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[strTempIndividualPDFPGFolderPath]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Creating Temporary BOE Pdf extraction file at &quot;&amp; strTempIndividualPDFPGFolderPath]" />
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[strTempIndividualPDFPGFolderPath]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,171" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[strTempIndividualPDFPGFolderPath]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;EXTRACTING BOE from &quot; &amp; strBOEPDFfolder]" />
    <Assign sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[strArrFileList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(strBOEPDFfolder)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="797,5012" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[strArrFileList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="518,4888" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="476,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Processing BOE saved at &quot; &amp; item.ToString]" />
            <Assign sap:VirtualizedContainerService.HintSize="476,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strBOEPDFName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[item.tostring]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Extract BOE from PDF to Excel" sap:VirtualizedContainerService.HintSize="476,4237" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="d" />
                <Variable x:TypeArguments="x:Int32" Name="COUNT" />
                <Variable x:TypeArguments="x:Int32" Name="INTi" />
                <Variable x:TypeArguments="x:String" Name="strIndividualPdfFileName" />
                <Variable x:TypeArguments="x:String" Default="C:\Users\issac\Documents\BOE\BOE.xlsm" Name="strBOEExcel" />
                <Variable x:TypeArguments="x:String" Name="strBOEFileName" />
                <Variable x:TypeArguments="x:String" Name="strBOEFilePath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[strBOEPDFName]" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[COUNT]" />
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[count &amp; &quot; pages found in BOE saved at &quot; &amp; strBOEPDFName]" />
              <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[INTi]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="434,978" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,813" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strIndividualPdfFileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strTempIndividualPDFPGFolderPath &amp; "\" &amp; INTi &amp; ".pdf"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Extracting  Page &quot; &amp; INTi.ToString &amp; &quot;  from&quot; &amp;strBOEPDFName &amp; &quot; and saving as &quot;&amp; strIndividualPdfFileName]" />
                    <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[strBOEPDFName]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_1" OutputFileName="[strIndividualPdfFileName]" Range="[INTi.ToString]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Saving PDF of page  &quot; &amp;INTi.ToString &amp; &quot;as excel at &quot;&amp;  strIndividualPdfFileName.Replace(&quot;pdf&quot;,&quot;xls&quot;)]" />
                    <p:PDFTOExcel DisplayName="PDFTO excel" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="PDFTOExcel_1" Output="[d]" PDF="[strIndividualPdfFileName]" Tabular="True" />
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[INTi]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[INTi+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <ui:InterruptibleWhile.Condition>
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="INTi&lt;=Count" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                </ui:InterruptibleWhile.Condition>
              </ui:InterruptibleWhile>
              <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strBOEFileName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(item.ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strBOEFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strBOEExcelFolderPath &amp; "\" &amp; strBOEFileName &amp; ".xlsm"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Saving BOE convertor Template  from &quot; &amp; strBOEFileConvertor &amp;&quot;saving at &quot;&amp; strBOEFilePath]" />
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strBOEFilePath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[strBOEFileConvertor]" />
              <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
              <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="Acrd32" />
              <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[INTi]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="434,1430" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,1265" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Default="C:\Users\issac\Documents\BOE\" Name="strBOEfolder" />
                      <Variable x:TypeArguments="sd:DataTable" Name="DtBOE" />
                      <Variable x:TypeArguments="x:String" Name="strPdfExcelFileName" />
                      <Variable x:TypeArguments="x:String" Default="Page 1" Name="strExcelFilePageName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strIndividualPdfFileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strTempIndividualPDFPGFolderPath &amp;"\"&amp; INTi &amp; ".pdf"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strPdfExcelFileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strTempIndividualPDFPGFolderPath+"\"+INTi.ToString+".xls"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Reading range from &quot; &amp; strPdfExcelFileName &amp; &quot; writing range in sheet &quot;&amp; INTi.ToString &amp;&quot; of &quot;&amp; strBOEFilePath]" />
                    <ui:ReadRange AddHeaders="True" DataTable="[DtBOE]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[strExcelFilePageName]" WorkbookPath="[strPdfExcelFileName]">
                      <ui:ReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ReadRange.Range>
                    </ui:ReadRange>
                    <ui:WriteRange AddHeaders="True" DataTable="[DtBOE]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[INTi.ToString]" WorkbookPath="[strBOEFilePath]">
                      <ui:WriteRange.StartingCell>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:WriteRange.StartingCell>
                    </ui:WriteRange>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Deleting tEMP PDF file saved at &quot;&amp; strIndividualPdfFileName]" />
                    <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[strPdfExcelFileName]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Deleting Temp Excel file saved at &quot;&amp; strPdfExcelFileName]" />
                    <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[strIndividualPdfFileName]" />
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[INTi]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[INTi+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <ui:InterruptibleWhile.Condition>
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="INTi&lt;=Count" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                </ui:InterruptibleWhile.Condition>
              </ui:InterruptibleWhile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Macro Retry workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\Macro Retry.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="Macro_Timeout">00:02:00</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="File_Name">[strBOEFilePath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Macro_Name">BOE_Extraction</InArgument>
                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="Macro_Parameters" />
                  <OutArgument x:TypeArguments="x:String" x:Key="Out_Sheet_Name" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Macro Retry workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\Macro Retry.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="Macro_Timeout">00:02:00</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="File_Name">[strBOEFilePath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Macro_Name">Duty</InArgument>
                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="Macro_Parameters" />
                  <OutArgument x:TypeArguments="x:String" x:Key="Out_Sheet_Name" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[strBOEFilePath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,250" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="BOE_Extraction" />
                            <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_2" MacroName="Duty" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
            </Sequence>
            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[strBOEPdfConvertedFolder]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="476,157" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[item.ToString]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="476,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Moving Processed BOE PDF from &quot; &amp; item.ToString &amp; &quot; to &quot; &amp; strBOEPdfConvertedFolder]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>