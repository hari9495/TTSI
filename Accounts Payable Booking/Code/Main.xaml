<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.StrConfigFile="\\192.168.1.25\Steel_Operation\RPA\Accounts Payable Booking\Config\Config.xlsx" this:Main.strProcessName="AP Booking" this:Main.StrEnvironment="Dev" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Variable to store Location where Config file is stored" Name="StrConfigFile" Type="InArgument(x:String)">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Argument that stores process name" Name="strProcessName" Type="InArgument(x:String)">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Argument that stores environment" Name="StrEnvironment" Type="InArgument(x:String)">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1288,1587</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <StateMachine InitialState="{x:Reference __ReferenceID7}" sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;--Complete AP Booking&#xA;&#xA;Contains 5 major states ,1 for each Mill Namely TATA,JCAPCP,JSW,POSCOM,NSC  along with the  The basic Init ,End and Business exception Handling state" DisplayName="AP Booking" sap:VirtualizedContainerService.HintSize="1298,1522" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">60,12.5</av:Point>
        <x:Double x:Key="StateContainerWidth">1264</x:Double>
        <x:Double x:Key="StateContainerHeight">1414</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">120,61.25 150,61.25 150,44.5 273,44.5</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="TATA Invoice Processing&#xA;&#xA;TATA Invoice is processed for GRPO and AP Booking&#xA;1.Extraction of Invoice from Email&#xA;2.Extraction of GRPO Wizard from SAP&#xA;3.Extraction of Incoming Material from SCAMS&#xA;4.Validation of Invoice against SAP and SCAMs data&#xA;5.GRPO /AP completion in SAP&#xA;6.Error and exception handling with email to user&#xA;7.Update HSN in case of change wrt invoie and SAP." DisplayName="Invoice Processing TATA" sap:VirtualizedContainerService.HintSize="1698,7395" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Processing TATA Invoice" sap:VirtualizedContainerService.HintSize="1652,6981" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="input" sap:VirtualizedContainerService.HintSize="1610,91" sap2010:WorkflowViewState.IdRef="LogMessage_99" Level="Trace" Message="[&quot;AP Booking Process  Has started for TATA Invoice - &quot;+DateTime.Now.ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1610,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[bolShouldStop]" />
          <If Condition="[bolShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1610,6084" sap2010:WorkflowViewState.IdRef="If_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;+DateTime.Now.ToString]" />
                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="TATA Invoice Processing" sap:VirtualizedContainerService.HintSize="1189,5926" sap2010:WorkflowViewState.IdRef="Sequence_65">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="1147,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="1147,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString.Equals(&quot;TATA&quot;),False)]" DisplayName="If This Line is Provided in Execution List?" sap:VirtualizedContainerService.HintSize="1147,5634" sap2010:WorkflowViewState.IdRef="If_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Processs TATA Invoices for GRPO /AP" sap:VirtualizedContainerService.HintSize="726,5476" sap2010:WorkflowViewState.IdRef="Sequence_64">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="684,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="RemoveAt">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </InvokeMethod>
                      <TryCatch DisplayName="TATA Invoice Pocessing" sap:VirtualizedContainerService.HintSize="684,5210" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="646,2842" sap2010:WorkflowViewState.IdRef="Sequence_118">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="s1" />
                              <Variable x:TypeArguments="x:String" Name="s2" />
                              <Variable x:TypeArguments="x:String" Name="s3" />
                              <Variable x:TypeArguments="x:String" Name="s4" />
                              <Variable x:TypeArguments="x:String" Name="S5" />
                              <Variable x:TypeArguments="x:String" Name="S6" />
                              <Variable x:TypeArguments="x:String" Name="s7" />
                              <Variable x:TypeArguments="x:String" Name="strTemplPath" />
                              <Variable x:TypeArguments="x:String" Name="strSummaryFolderPath" />
                              <Variable x:TypeArguments="x:String" Name="strFinalFilePath" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Email Extraction and Invoice Extraction for ALL Mills" sap:VirtualizedContainerService.HintSize="604,2750" sap2010:WorkflowViewState.IdRef="Sequence_123">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strIncominMatFilesavePath" />
                                <Variable x:TypeArguments="x:String" Name="strGRPOWizardFileName" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages Filter="{x:Null}" FilterByMessageIds="{x:Null}" Messages="{x:Null}" Account="RPA_AP_B@ttssi.co.in" DisplayName=" Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="NewestFirst" TimeoutMS="120000" Top="30" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="Invoke AP-Logic-Get Email Attachment workflow" sap:VirtualizedContainerService.HintSize="562,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_154" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountTATA").ToString)]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strMillName">TATA</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="PdfTempFileSaveFolder">[dicConfig("PdfTempFileSaveFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="PdfFinalFileSaveFolder">[dicConfig("PdfFinalFileSaveFolderTATA").ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="Invoke AP Logic Invoice Processing TATA workflow" sap:VirtualizedContainerService.HintSize="562,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Processing.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strpdfConvertededfolder">[dicConfig("PdfConvertedFileSaveFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceConvertorFilePath">[dicConfig("InvoiceConvertorTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strInputPDFfileDirectory">[dicConfig("PdfFinalFileSaveFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strExcelFileProcessingPath">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strUnableToprocessFolder">[dicConfig("strTATAUnableToProcessFolderPdf").ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[Directory.GetFiles(dicConfig(&quot;ExcelFilesProcessingFolderTATA&quot;).ToString).count&gt;0]" DisplayName="AP Processing " sap:VirtualizedContainerService.HintSize="562,2261" sap2010:WorkflowViewState.IdRef="If_21">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,2084" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_156" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-SCAMS-Login.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Download Incoming Material Report workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_131" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Download Incoming Material Report.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportTemplate">[dicConfig("strIncomingMatReportTemplate").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportSaveFolder">[dicConfig("strIncomingMatReportSaveFolder").ToString]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="strIncominMatFilesavePath">[strIncominMatFilesavePath]</OutArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="IntIncomingMatDaysFilter">[convert.ToInt32(dicConfig("IntIncomingMaterialNoofDaysFilter").ToString)]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy Incoming Material Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_132" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy Incoming Material Report to Pending Files.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strIncomingMaterialFilePath">[strIncominMatFilesavePath]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Logic - SAP Login workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_140" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Logic - SAP Login.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strsapfilelocation">[dicConfig("SAPApplicationPath").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strSAPUserName">[dicConfig("SAPUserName").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strSAPPwd">[dicConfig("SAPUserPassword").ToString]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_141" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy GRPO Wizard Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_142" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy GRPO Wizard Report to Pending Files.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFilePath">[strGRPOWizardFileName]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strMillName">TATA</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <If Condition="[dicConfig(&quot;HSNUpdate&quot;).ToString=&quot;Y&quot;]" sap:VirtualizedContainerService.HintSize="484,685" sap2010:WorkflowViewState.IdRef="If_23">
                                      <If.Then>
                                        <Sequence DisplayName="HSN Updation Sequence" sap:VirtualizedContainerService.HintSize="421,508" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic HSN Change workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_161" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic HSN Change.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_159" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy GRPO Wizard Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_160" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy GRPO Wizard Report to Pending Files.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFilePath">[strGRPOWizardFileName]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="strMillName">TATA</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Validation for GRPO workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_143" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Validation for GRPO.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderTATA").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strInputPDFFileDiectory">[dicConfig("PdfConvertedFileSaveFolderTATA").ToString]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strProcessedFolderLocation">[dicConfig("strProcessedInvoiceFolderTATA").tostring]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strMillName">TATA</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="strUnableToProcessFolder">[dicConfig("strTATAUnableToProcessFolder").ToString]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_193" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="611,309" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="569,217" sap2010:WorkflowViewState.IdRef="If_33">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_264">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_265">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="650,652" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,583" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Fatal" Message="[&quot;Exception Occured at TATA Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                          <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="650,652" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:ApplicationException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="376,583" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Fatal" Message="[&quot;Exception Occured at TATA Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">ApplicationException</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="650,752" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_243">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_143" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_286">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_287">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_288">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_289">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_290">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">["TATA".ToString.Split(CChar(",")).ToList()]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Skip Invoice Mill" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_108">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_94" Level="Info" Message="[&quot;Invoice - &quot;+if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString,&quot;NA&quot;)]" />
                      <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_176">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Success</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_177">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" DisplayName="Retry Mechanism" sap:VirtualizedContainerService.HintSize="1610,441" sap2010:WorkflowViewState.IdRef="If_37">
            <If.Then>
              <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_201">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_200">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_272">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_202">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_273">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_135" Level="Info" Message="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes.tostring &amp; &quot; minutes have passed of alloted &quot; &amp; convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) &amp;&quot; mins.Hence Continuing execution&quot;]" />
              </Sequence>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1164,91" sap2010:WorkflowViewState.IdRef="LogMessage_100" Level="Info" Message="[&quot;Invoice AP Booking  has completed - &quot;+DateTime.Now.ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">264.5,289.5</av:Point>
          <av:Size x:Key="ShapeSize">262,114</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">228</x:Double>
          <x:Double x:Key="StateContainerHeight">78.080000000000041</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="TATA END" sap:VirtualizedContainerService.HintSize="595,505" sap2010:WorkflowViewState.IdRef="Transition_47">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">264.5,352.2 138.8,352.2 138.8,217.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">55</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[(not(BoolRetryExecution) or not(bolworkstatus)) and strExceptionType&lt;&gt;"BusinessException"]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,62" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
              <State.Entry>
                <TryCatch sap:VirtualizedContainerService.HintSize="558,1933" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <TryCatch.Try>
                    <Sequence DisplayName="End of process activities" sap:VirtualizedContainerService.HintSize="520,1219" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strLogFileName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Summary File Creation" sap:VirtualizedContainerService.HintSize="478,823" sap2010:WorkflowViewState.IdRef="Sequence_148">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_207">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strLogFileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dicconfig("strSummaryFolder").ToString+"\AP Booking Summary"+DateTime.Now.ToString(" dd-MM-yy hh.mm tt")+".xlsm"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strLogFileName]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="436,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[dicconfig(&quot;strSummaryFile&quot;).ToString]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Macro Retry workflow" sap:VirtualizedContainerService.HintSize="436,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_158" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\Macro Retry.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="Macro_Timeout">00:12:30</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="File_Name">[strLogFileName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Macro_Name">final</InArgument>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="Macro_Parameters" />
                            <OutArgument x:TypeArguments="x:String" x:Key="Out_Sheet_Name" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,282" sap2010:WorkflowViewState.IdRef="CommentOut_26">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_228">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Summary File Email" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_155" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generic\Send Email.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrExceptionMessage">GRPO | AP Booking Summary</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrExceptionType">Success</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrWorkEmailIDTo">[dicConfig("WorkEmailIDTo").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrWorkEmailIDCc">[dicConfig("WorkEmailIDSummary").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="BolAttachment">True</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strMillName" />
                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceNo" />
                                  <InArgument x:TypeArguments="scg:List(x:String)" x:Key="StrAttachmentPath">[(strLogFileName).ToString.Split(CChar(",")).ToList()]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="StrProcessName">GRPO | AP Booking Summary Generation</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailTemplatePath">[dicConfig("EmailTemplateLocation").ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="478,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="478,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="522,404" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,335" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">38,155.5</av:Point>
                  <av:Size x:Key="ShapeSize">144,62</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="B.Excep TATA" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_32">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">526.5,335.1 1034.7,335.1 1034.7,359.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">14</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Business Excepton Handler" DisplayName="BE Handler" sap:VirtualizedContainerService.HintSize="251,70" sap2010:WorkflowViewState.IdRef="State_6">
              <State.Entry>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,1366" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence sap2010:Annotation.AnnotationText="Business Exception Handler" DisplayName="BE Handler" sap:VirtualizedContainerService.HintSize="376,404" sap2010:WorkflowViewState.IdRef="Sequence_56">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_215" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Assign bolEXHandler" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bolEXHandler]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_285">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,652" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,583" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="Info" Message="[&quot;AE Handler Failed - &quot;+exception.Message]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                          <Assign DisplayName="Assign bolEXHandler" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[bolEXHandler]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["AE Handler Failed - "+exception.Message]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">984.5,359.5</av:Point>
                  <av:Size x:Key="ShapeSize">251,70</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">217</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="BE Success" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">1235.5,398 1257.9,398 1257.9,259.5 447.9,259.5 447.9,289.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">54</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[bolEXHandler]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Processed to Business Exception Handler&quot;]" />
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Not bolWorkStatus and strExceptionType=&quot;BusinessException&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="TATA SUCCESS" sap:VirtualizedContainerService.HintSize="479,578" sap2010:WorkflowViewState.IdRef="Transition_51">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">395.5,403.5 395.5,433.5 400,433.5 400,486</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="JCAPCP Invoice Processing &#xA;&#xA;JCAPCP Invoice is processed for GRPO and AP Booking&#xA;1.Extraction of Invoice from Email &#xA;2.Extraction of GRPO Wizard from SAP&#xA;3.Extraction of Incoming Material from SCAMS&#xA;4.Validation of Invoice against SAP and SCAMs data&#xA;5.GRPO /AP completion in SAP&#xA;6.Error and exception handling with email to user&#xA;" DisplayName="Invoice Processing JCAPCP" sap:VirtualizedContainerService.HintSize="261,88" sap2010:WorkflowViewState.IdRef="State_7">
              <State.Entry>
                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Processing JCAPCP Invoice" sap:VirtualizedContainerService.HintSize="1625,6388" sap2010:WorkflowViewState.IdRef="Sequence_133">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1583,91" sap2010:WorkflowViewState.IdRef="LogMessage_103" Level="Info" Message="[&quot;AP Booking Process  Has started for JCAPCP Invoice - &quot;+DateTime.Now.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1583,22" sap2010:WorkflowViewState.IdRef="ShouldStop_2" Result="[bolShouldStop]" />
                  <If Condition="[bolShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1583,5491" sap2010:WorkflowViewState.IdRef="If_20">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_124">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_104" Level="Info" Message="[&quot;Stop process requested&quot;+DateTime.Now.ToString]" />
                        <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_189">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Success</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_190">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="JCAPCP Invoice Processing" sap:VirtualizedContainerService.HintSize="1162,5333" sap2010:WorkflowViewState.IdRef="Sequence_132">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="1120,60" sap2010:WorkflowViewState.IdRef="Assign_191">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Success</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="1120,60" sap2010:WorkflowViewState.IdRef="Assign_192">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString.Equals(&quot;JCAPCP&quot;),False)]" DisplayName="If This Line is Pravided in Execution List?" sap:VirtualizedContainerService.HintSize="1120,5041" sap2010:WorkflowViewState.IdRef="If_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Prepare Time Plan" sap:VirtualizedContainerService.HintSize="699,4883" sap2010:WorkflowViewState.IdRef="Sequence_130">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="657,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="RemoveAt">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</InArgument>
                                </InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </InvokeMethod>
                              <TryCatch DisplayName="JCAPCP Invoice Pocessing" sap:VirtualizedContainerService.HintSize="657,4617" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch.Try>
                                  <Sequence sap:VirtualizedContainerService.HintSize="568,2125" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="s1" />
                                      <Variable x:TypeArguments="x:String" Name="s2" />
                                      <Variable x:TypeArguments="x:String" Name="s3" />
                                      <Variable x:TypeArguments="x:String" Name="s4" />
                                      <Variable x:TypeArguments="x:String" Name="S5" />
                                      <Variable x:TypeArguments="x:String" Name="S6" />
                                      <Variable x:TypeArguments="x:String" Name="s7" />
                                      <Variable x:TypeArguments="x:String" Name="strTemplPath" />
                                      <Variable x:TypeArguments="x:String" Name="strSummaryFolderPath" />
                                      <Variable x:TypeArguments="x:String" Name="strFinalFilePath" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Email Extraction and Invoice Extraction for ALL Mills" sap:VirtualizedContainerService.HintSize="526,2033" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="strIncominMatFilesavePath" />
                                        <Variable x:TypeArguments="x:String" Name="strGRPOWizardFileName" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Xaml handles Extraction of invoice emails and saves the attachment file in designated location&#xA;&#xA;a.Extract Emails based on&#xA; i.Subject Line Filter&#xA;ii.Mill Name&#xA;iii.No of atachments&#xA;iv.Type of attachment.&#xA;&#xA;b.Save attachment in common folder&#xA;&#xA;" DisplayName="Invoke AP Logic Email Sort workflow" sap:VirtualizedContainerService.HintSize="484,304" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_146" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Email Sort.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Processing  workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_147" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Processing.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strpdfConvertededfolder">[dicConfig("PdfConvertedFileSaveFolderJCAPCP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strInvoiceConvertorFilePath">[dicConfig("InvoiceConvertorJCAPCP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strInputPDFfileDirectory">[dicConfig("PdfFinalFileSaveFolderJCAPCP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strExcelFileProcessingPath">[dicConfig("ExcelFilesProcessingFolderJCAPCP").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strUnableToprocessFolder">[dicConfig("strJCAPCPUnableToProcessFolderPdf").ToString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <If Condition="[Directory.GetFiles(dicConfig(&quot;ExcelFilesProcessingFolderJCAPCP&quot;).ToString).Count&gt;0]" sap:VirtualizedContainerService.HintSize="484,1445" sap2010:WorkflowViewState.IdRef="If_22">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="421,1268" sap2010:WorkflowViewState.IdRef="Sequence_147">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_157" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-SCAMS-Login.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Download Incoming Material Report workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_148" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Download Incoming Material Report.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportTemplate">[dicConfig("strIncomingMatReportTemplate").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportSaveFolder">[dicConfig("strIncomingMatReportSaveFolder").ToString]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="strIncominMatFilesavePath">[strIncominMatFilesavePath]</OutArgument>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="IntIncomingMatDaysFilter">[convert.ToInt32(dicConfig("IntIncomingMaterialNoofDaysFilter").ToString)]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy Incoming Material Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_149" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy Incoming Material Report to Pending Files.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strIncomingMaterialFilePath">[strIncominMatFilesavePath]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJCAPCP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Logic - SAP Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_150" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Logic - SAP Login.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strsapfilelocation">[dicConfig("SAPApplicationPath").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strSAPUserName">[dicConfig("SAPUserName").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strSAPPwd">[dicConfig("SAPUserPassword").ToString]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_151" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy GRPO Wizard Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_152" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy GRPO Wizard Report to Pending Files.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJCAPCP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFilePath">[strGRPOWizardFileName]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strMillName">JCAPCP</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Validation for GRPO and AP workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_153" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Validation for GRPO.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJCAPCP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strInputPDFFileDiectory">[dicConfig("PdfConvertedFileSaveFolderJCAPCP").ToString]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strProcessedFolderLocation">[dicConfig("strProcessedInvoiceFolderJCAPCP").tostring]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strMillName">JCAPCP</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="strUnableToProcessFolder">[dicConfig("strJCAPCPUnableToProcessFolder").ToString]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_194" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="623,714" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_127">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_105" Level="Fatal" Message="[&quot;Exception Occured at JCAPCP Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_193">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_194">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_195">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_196">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="Y" />
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                  <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="623,714" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:ApplicationException">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_128">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_106" Level="Fatal" Message="[&quot;Exception Occured at AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_197">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_198">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_199">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">ApplicationException</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_200">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="Y" />
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                  <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="623,752" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_244">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_144" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_291">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_292">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_293">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_294">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_295">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="scg:List(x:String)">["JCAPCP".ToString.Split(CChar(",")).ToList()]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Skip Invoice Mill" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_131">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_108" Level="Info" Message="[&quot;Invoice - &quot;+if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString,&quot;NA&quot;)]" />
                              <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_205">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Success</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_206">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" DisplayName="Retry Mechanism" sap:VirtualizedContainerService.HintSize="1583,441" sap2010:WorkflowViewState.IdRef="If_38">
                    <If.Then>
                      <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_206">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_205">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_274">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_207">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_275">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_136" Level="Info" Message="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes.tostring &amp; &quot; minutes have passed of alloted &quot; &amp; convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) &amp;&quot; mins.Hence Continuing execution&quot;]" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1532,91" sap2010:WorkflowViewState.IdRef="LogMessage_109" Level="Info" Message="[&quot;Invoice AP Booking  has completed - &quot;+DateTime.Now.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">269.5,486</av:Point>
                  <av:Size x:Key="ShapeSize">261,88</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">227</x:Double>
                  <x:Double x:Key="StateContainerHeight">52.080000000000013</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="JCAPCP END" sap:VirtualizedContainerService.HintSize="595,505" sap2010:WorkflowViewState.IdRef="Transition_37">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">269.5,534.4 110,534.4 110,217.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[(not(BoolRetryExecution) or not(bolworkstatus)) and strExceptionType&lt;&gt;"BusinessException"]</Transition.Condition>
                </Transition>
                <Transition DisplayName="JCAPCP SUCCESS" sap:VirtualizedContainerService.HintSize="479,578" sap2010:WorkflowViewState.IdRef="Transition_50">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">386.95,574 386.95,604 387.4,604 387.4,654</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID5" sap2010:Annotation.AnnotationText="POSCOM Invoice procesing&#xA;&#xA;POSCOM Invoice is processed for GRPO and AP Booking&#xA;1.Extraction of Invoice data from dispatch report shared via email &#xA;2.Extraction of GRPO Wizard from SAP&#xA;3.Extraction of Incoming Material from SCAMS&#xA;4.Validation of Invoice against SAP and SCAMs data&#xA;5.GRPO /AP completion in SAP&#xA;6.Error and exception handling with email to user&#xA;" DisplayName="Invoice Processing POSCOM" sap:VirtualizedContainerService.HintSize="252,72" sap2010:WorkflowViewState.IdRef="State_9">
                      <State.Entry>
                        <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Processing POSCOM Invoice" sap:VirtualizedContainerService.HintSize="1553,6202" sap2010:WorkflowViewState.IdRef="Sequence_171">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1511,91" sap2010:WorkflowViewState.IdRef="LogMessage_117" Level="Info" Message="[&quot;AP Booking Process  Has started for POSCOM Invoice - &quot;+DateTime.Now.ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1511,22" sap2010:WorkflowViewState.IdRef="ShouldStop_4" Result="[bolShouldStop]" />
                          <If Condition="[bolShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1511,5305" sap2010:WorkflowViewState.IdRef="If_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_161">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_118" Level="Info" Message="[&quot;Stop process requested&quot;+DateTime.Now.ToString]" />
                                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_226">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_227">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="poscom Invoice Processing" sap:VirtualizedContainerService.HintSize="1090,5147" sap2010:WorkflowViewState.IdRef="Sequence_170">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="1048,60" sap2010:WorkflowViewState.IdRef="Assign_228">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="1048,60" sap2010:WorkflowViewState.IdRef="Assign_229">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString.Equals(&quot;POSCOM&quot;),False)]" DisplayName="If This Line is Pravided in Execution List?" sap:VirtualizedContainerService.HintSize="1048,4855" sap2010:WorkflowViewState.IdRef="If_28">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Prepare Time Plan" sap:VirtualizedContainerService.HintSize="627,4697" sap2010:WorkflowViewState.IdRef="Sequence_168">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="585,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="RemoveAt">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </InvokeMethod>
                                      <TryCatch DisplayName="POSCOM  Invoice Pocessing" sap:VirtualizedContainerService.HintSize="585,4431" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="547,1939" sap2010:WorkflowViewState.IdRef="Sequence_164">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="s1" />
                                              <Variable x:TypeArguments="x:String" Name="s2" />
                                              <Variable x:TypeArguments="x:String" Name="s3" />
                                              <Variable x:TypeArguments="x:String" Name="s4" />
                                              <Variable x:TypeArguments="x:String" Name="S5" />
                                              <Variable x:TypeArguments="x:String" Name="S6" />
                                              <Variable x:TypeArguments="x:String" Name="s7" />
                                              <Variable x:TypeArguments="x:String" Name="strTemplPath" />
                                              <Variable x:TypeArguments="x:String" Name="strSummaryFolderPath" />
                                              <Variable x:TypeArguments="x:String" Name="strFinalFilePath" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence sap:VirtualizedContainerService.HintSize="505,1847" sap2010:WorkflowViewState.IdRef="Sequence_224">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Sequence DisplayName="Email Extraction and Invoice Extraction for ALL Mills" sap:VirtualizedContainerService.HintSize="463,1755" sap2010:WorkflowViewState.IdRef="Sequence_223">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="strIncominMatFilesavePath" />
                                                  <Variable x:TypeArguments="x:String" Name="strGRPOWizardFileName" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="421,51" sap2010:WorkflowViewState.IdRef="CommentOut_23">
                                                  <ui:CommentOut.Body>
                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_225">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment - JSW workflow" sap:VirtualizedContainerService.HintSize="270,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_196" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment - JSW.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountPOSCOM").ToString)]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strMillName">POSCOM</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExcelDispatchReportTempFileSaveFolder">[dicConfig("DispatchReportTempFolderPOSCOM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExceDispatchFinalFileSaveFolder">[dicConfig("DispatchReportFolderPOSCOM").ToString]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:InvokeWorkflowFile>
                                                    </Sequence>
                                                  </ui:CommentOut.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:CommentOut>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment - POSCOM workflow" sap:VirtualizedContainerService.HintSize="421,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_206" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment - POSCOM.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountPOSCOM").ToString)]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="strMillName">POSCOM</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="ExcelDispatchReportTempFileSaveFolder">[dicConfig("DispatchReportTempFolderPOSCOM").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="ExceDispatchFinalFileSaveFolder">[dicConfig("DispatchReportFolderPOSCOM").ToString]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <Sequence sap:VirtualizedContainerService.HintSize="421,1420" sap2010:WorkflowViewState.IdRef="Sequence_222">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Logic - SAP Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_197" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Logic - SAP Login.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strsapfilelocation">[dicConfig("SAPApplicationPath").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strSAPUserName">[dicConfig("SAPUserName").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strSAPPwd">[dicConfig("SAPUserPassword").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_198" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Dispatch Report Convertor workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_199" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Dispatch Report Convertor.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportFolder">[dicConfig("DispatchReportFolderPOSCOM").tostring]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInvoicesToBeProceesedExcelFolder">[dicConfig("ExcelFilesProcessingFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInvoiceConvertedFolder">[dicConfig("ExeclFinalFileSaveFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDraftInvoiceExcelFolder">[dicConfig("ExcelTempFileSaveFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportProcessedFolder">[dicConfig("DispatchReportProcessedFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDateConvertor" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="strMillName">POSCOM</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strnvoiceConvertor">[dicConfig("InvoiceConvertorPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportProcessingFolder">[dicConfig("DispatchReportProcessingFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportConvertedFolder">[dicConfig("DispatchReportConvertedFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportConvertor">[dicConfig("DispatchReportConvertorPOSCOM").ToString]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_200" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-SCAMS-Login.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Download Incoming Material Report workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_201" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Download Incoming Material Report.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportTemplate">[dicConfig("strIncomingMatReportTemplate").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportSaveFolder">[dicConfig("strIncomingMatReportSaveFolder").ToString]</InArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="strIncominMatFilesavePath">[strIncominMatFilesavePath]</OutArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="IntIncomingMatDaysFilter">[convert.ToInt32(dicConfig("IntIncomingMaterialNoofDaysFilter").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy Incoming Material Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_202" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy Incoming Material Report to Pending Files.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strIncomingMaterialFilePath">[strIncominMatFilesavePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy GRPO Wizard Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_203" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy GRPO Wizard Report to Pending Files.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFilePath">[strGRPOWizardFileName]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strMillName">POSCOM</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Validation for GRPO and AP workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_204" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Validation for GRPO.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderPOSCOM").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strInputPDFFileDiectory" />
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strProcessedFolderLocation">[dicConfig("strProcessedInvoiceFolderPOSCOM").tostring]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strMillName">POSCOM</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="strUnableToProcessFolder">[dicConfig("strPOSCOMUnableToProcessFolder").ToString]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_205" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </Sequence>
                                            </Sequence>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="551,714" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_165">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_119" Level="Fatal" Message="[&quot;Exception Occured at JCAPCP Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_230">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_231">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_232">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_233">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_12" Item="Y" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                          <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="551,714" sap2010:WorkflowViewState.IdRef="Catch`1_28">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:ApplicationException">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_166">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_120" Level="Fatal" Message="[&quot;Exception Occured at AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_234">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_235">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_236">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">ApplicationException</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_237">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_13" Item="Y" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="551,752" sap2010:WorkflowViewState.IdRef="Catch`1_29">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_167">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_121" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_238">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_239">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_240">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_241">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_296">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="scg:List(x:String)">["POSCOM".ToString.Split(CChar(",")).ToList()]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Skip Invoice Mill" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_169">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_122" Level="Info" Message="[&quot;Invoice - &quot;+if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString,&quot;NA&quot;)]" />
                                      <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_242">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Success</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_243">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                          <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" DisplayName="Retry Mechanism" sap:VirtualizedContainerService.HintSize="1511,441" sap2010:WorkflowViewState.IdRef="If_39">
                            <If.Then>
                              <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_209">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_208">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_276">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_210">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_277">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_137" Level="Info" Message="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes.tostring &amp; &quot; minutes have passed of alloted &quot; &amp; convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) &amp;&quot; mins.Hence Continuing execution&quot;]" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1511,91" sap2010:WorkflowViewState.IdRef="LogMessage_123" Level="Info" Message="[&quot;Invoice AP Booking  has completed - &quot;+DateTime.Now.ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">274,654</av:Point>
                          <av:Size x:Key="ShapeSize">252,72</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">217.8377518557794</x:Double>
                          <x:Double x:Key="StateContainerHeight">35.8427415689485</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="POSCOM SUCCESS" sap:VirtualizedContainerService.HintSize="479,578" sap2010:WorkflowViewState.IdRef="Transition_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">387.4,726 387.4,756 377.4,756 377.4,808.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="JSW Invoice Processing&#xA;&#xA;JSW Invoice is processed for GRPO and AP Booking&#xA;1.Extraction of Invoice data from dispatch report shared via email &#xA;2.Extraction of GRPO Wizard from SAP&#xA;3.Extraction of Incoming Material from SCAMS&#xA;4.Validation of Invoice against SAP and SCAMs data&#xA;5.GRPO /AP completion in SAP&#xA;6.Error and exception handling with email to user&#xA;" DisplayName="Invoice Processing JSW" sap:VirtualizedContainerService.HintSize="1698,6969" sap2010:WorkflowViewState.IdRef="State_8">
                              <State.Entry>
                                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Processing JCAPCP Invoice" sap:VirtualizedContainerService.HintSize="1652,6555" sap2010:WorkflowViewState.IdRef="Sequence_160">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1610,91" sap2010:WorkflowViewState.IdRef="LogMessage_110" Level="Info" Message="[&quot;AP Booking Process  Has started for JSW Invoice - &quot;+DateTime.Now.ToString]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1610,22" sap2010:WorkflowViewState.IdRef="ShouldStop_3" Result="[bolShouldStop]" />
                                  <If Condition="[bolShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1610,5658" sap2010:WorkflowViewState.IdRef="If_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_150">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_111" Level="Info" Message="[&quot;Stop process requested&quot;+DateTime.Now.ToString]" />
                                        <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_208">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Success</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_209">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="JSW Invoice Processing" sap:VirtualizedContainerService.HintSize="1189,5500" sap2010:WorkflowViewState.IdRef="Sequence_159">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="1147,60" sap2010:WorkflowViewState.IdRef="Assign_210">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Success</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="1147,60" sap2010:WorkflowViewState.IdRef="Assign_211">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString.Equals(&quot;JSW&quot;),False)]" DisplayName="If This Line is Pravided in Execution List?" sap:VirtualizedContainerService.HintSize="1147,5208" sap2010:WorkflowViewState.IdRef="If_25">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="AP Processing JSW" sap:VirtualizedContainerService.HintSize="726,5050" sap2010:WorkflowViewState.IdRef="Sequence_157">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="684,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="RemoveAt">
                                                <InvokeMethod.TargetObject>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</InArgument>
                                                </InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                              </InvokeMethod>
                                              <TryCatch DisplayName="JSW Invoice Pocessing" sap:VirtualizedContainerService.HintSize="684,4784" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <TryCatch.Try>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="646,2354" sap2010:WorkflowViewState.IdRef="Sequence_153">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:String" Name="s1" />
                                                      <Variable x:TypeArguments="x:String" Name="s2" />
                                                      <Variable x:TypeArguments="x:String" Name="s3" />
                                                      <Variable x:TypeArguments="x:String" Name="s4" />
                                                      <Variable x:TypeArguments="x:String" Name="S5" />
                                                      <Variable x:TypeArguments="x:String" Name="S6" />
                                                      <Variable x:TypeArguments="x:String" Name="s7" />
                                                      <Variable x:TypeArguments="x:String" Name="strTemplPath" />
                                                      <Variable x:TypeArguments="x:String" Name="strSummaryFolderPath" />
                                                      <Variable x:TypeArguments="x:String" Name="strFinalFilePath" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="Email Extraction and Invoice Extraction for ALL Mills" sap:VirtualizedContainerService.HintSize="604,2262" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:String" Name="strIncominMatFilesavePath" />
                                                        <Variable x:TypeArguments="x:String" Name="strGRPOWizardFileName" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment - JSW workflow" sap:VirtualizedContainerService.HintSize="562,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_192" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment - JSW.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountJSW").ToString)]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strMillName">JSW</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExcelDispatchReportTempFileSaveFolder">[dicConfig("DispatchReportTempFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExceDispatchFinalFileSaveFolder">[dicConfig("DispatchReportFolderJSW").ToString]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment - JSW workflow" sap:VirtualizedContainerService.HintSize="562,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_216" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment - JSW.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterJSW_NONTKM").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountJSW").ToString)]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="strMillName">JSW</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExcelDispatchReportTempFileSaveFolder">[dicConfig("DispatchReportTempFolderJSW").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ExceDispatchFinalFileSaveFolder">[dicConfig("DispatchReportFolderJSW").ToString]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="562,1420" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Logic - SAP Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_167" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Logic - SAP Login.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strsapfilelocation">[dicConfig("SAPApplicationPath").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strSAPUserName">[dicConfig("SAPUserName").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strSAPPwd">[dicConfig("SAPUserPassword").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_168" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Dispatch Report Convertor workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_191" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Dispatch Report Convertor.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportFolder">[dicConfig("DispatchReportFolderJSW").tostring]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInvoicesToBeProceesedExcelFolder">[dicConfig("ExcelFilesProcessingFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInvoiceConvertedFolder">[dicConfig("ExeclFinalFileSaveFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDraftInvoiceExcelFolder">[dicConfig("ExcelTempFileSaveFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportProcessedFolder">[dicConfig("DispatchReportProcessedFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDateConvertor">[dicConfig("strJSWDateConvertor").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strMillName">JSW</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strnvoiceConvertor">[dicConfig("InvoiceConvertorJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportProcessingFolder">[dicConfig("DispatchReportProcessingFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportConvertedFolder">[dicConfig("DispatchReportConvertedFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strDispatchReportConvertor">[dicConfig("DispatchReportConvertorJSW").ToString]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_164" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-SCAMS-Login.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Download Incoming Material Report workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_165" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Download Incoming Material Report.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportTemplate">[dicConfig("strIncomingMatReportTemplate").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportSaveFolder">[dicConfig("strIncomingMatReportSaveFolder").ToString]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="strIncominMatFilesavePath">[strIncominMatFilesavePath]</OutArgument>
                                                            <InArgument x:TypeArguments="x:Int32" x:Key="IntIncomingMatDaysFilter">[convert.ToInt32(dicConfig("IntIncomingMaterialNoofDaysFilter").ToString)]</InArgument>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy Incoming Material Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_166" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy Incoming Material Report to Pending Files.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strIncomingMaterialFilePath">[strIncominMatFilesavePath]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy GRPO Wizard Report to Pending Files workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_169" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy GRPO Wizard Report to Pending Files.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFilePath">[strGRPOWizardFileName]</InArgument>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strMillName">JSW</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Validation for GRPO and AP workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_170" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Validation for GRPO.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInputXLfileDirectory">[dicConfig("ExcelFilesProcessingFolderJSW").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strInputPDFFileDiectory" />
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strProcessedFolderLocation">[dicConfig("strProcessedInvoiceFolderJSW").tostring]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strMillName">JSW</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="strUnableToProcessFolder">[dicConfig("strJSWUnableToProcessFolder").ToString]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_195" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </Sequence>
                                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,406" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                                        <ui:CommentOut.Body>
                                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,328" sap2010:WorkflowViewState.IdRef="Sequence_190">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If Condition="[Directory.GetFiles(dicConfig(&quot;ExcelFilesProcessingFolderJCAPCP&quot;).ToString).Count&gt;0]" sap:VirtualizedContainerService.HintSize="484,236" sap2010:WorkflowViewState.IdRef="If_24">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </If>
                                                          </Sequence>
                                                        </ui:CommentOut.Body>
                                                      </ui:CommentOut>
                                                    </Sequence>
                                                  </Sequence>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="650,652" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,583" sap2010:WorkflowViewState.IdRef="Sequence_154">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_112" Level="Fatal" Message="[&quot;Exception Occured at JSW Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_212">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_213">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_214">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_215">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                  <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="650,714" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:ApplicationException">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_113" Level="Fatal" Message="[&quot;Exception Occured at AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_216">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_217">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_218">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">ApplicationException</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_219">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10" Item="Y" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                  <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="650,752" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_156">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_114" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_220">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_221">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_222">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_223">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_284">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="scg:List(x:String)">["JSW".ToString.Split(CChar(",")).ToList()]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Skip Invoice Mill" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_158">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_115" Level="Info" Message="[&quot;Invoice - &quot;+if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString,&quot;NA&quot;)]" />
                                              <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_224">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">Success</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_225">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" DisplayName="Retry Mechanism" sap:VirtualizedContainerService.HintSize="1610,441" sap2010:WorkflowViewState.IdRef="If_40">
                                    <If.Then>
                                      <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_213">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_212">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_278">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_214">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_279">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_138" Level="Info" Message="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes.tostring &amp; &quot; minutes have passed of alloted &quot; &amp; convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) &amp;&quot; mins.Hence Continuing execution&quot;]" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1610,91" sap2010:WorkflowViewState.IdRef="LogMessage_116" Level="Info" Message="[&quot;Invoice AP Booking  has completed - &quot;+DateTime.Now.ToString]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">264,808.5</av:Point>
                                  <av:Size x:Key="ShapeSize">252,72</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">217.8377518557794</x:Double>
                                  <x:Double x:Key="StateContainerHeight">35.8427415689485</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="JSW SUCCESS" sap:VirtualizedContainerService.HintSize="479,578" sap2010:WorkflowViewState.IdRef="Transition_44">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">390,880.5 390,958.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <State x:Name="__ReferenceID6" sap2010:Annotation.AnnotationText="NSC Invoie Processing &#xA;&#xA;NSC Invoice is processed for GRPO and AP Booking&#xA;1.Extraction of Invoice data from Invoice PDF shared via email &#xA;2.Extraction of BOE shared via email&#xA;3.Validation of BOE against Invoice&#xA;4.Extraction of GRPO Wizard from SAP&#xA;5.Extraction of Incoming Material from SCAMS&#xA;6.Validation of Invoice against SAP and SCAMs data&#xA;7.GRPO /AP completion in SAP&#xA;8.Error and exception handling with email to user&#xA;" DisplayName="Invoice Processing NSC" sap:VirtualizedContainerService.HintSize="252,72" sap2010:WorkflowViewState.IdRef="State_10">
                                      <State.Entry>
                                        <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Processing NSC Invoice" sap:VirtualizedContainerService.HintSize="1469,6149" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1427,91" sap2010:WorkflowViewState.IdRef="LogMessage_124" Level="Info" Message="[&quot;AP Booking Process  Has started for NSC Invoice - &quot;+DateTime.Now.ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="1427,22" sap2010:WorkflowViewState.IdRef="ShouldStop_5" Result="[bolShouldStop]" />
                                          <If Condition="[bolShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="1427,5252" sap2010:WorkflowViewState.IdRef="If_32">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_172">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_125" Level="Info" Message="[&quot;Stop process requested&quot;+DateTime.Now.ToString]" />
                                                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_244">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_245">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="NSC Invoice Processing" sap:VirtualizedContainerService.HintSize="1006,5094" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="964,60" sap2010:WorkflowViewState.IdRef="Assign_246">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="964,60" sap2010:WorkflowViewState.IdRef="Assign_247">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString.Equals(&quot;NSC&quot;),False)]" DisplayName="If This Line is Pravided in Execution List?" sap:VirtualizedContainerService.HintSize="964,4802" sap2010:WorkflowViewState.IdRef="If_31">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence DisplayName="Process Invoice" sap:VirtualizedContainerService.HintSize="543,4644" sap2010:WorkflowViewState.IdRef="Sequence_179">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="501,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="RemoveAt">
                                                        <InvokeMethod.TargetObject>
                                                          <InArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</InArgument>
                                                        </InvokeMethod.TargetObject>
                                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                      </InvokeMethod>
                                                      <TryCatch DisplayName="NSC Invoice Pocessing" sap:VirtualizedContainerService.HintSize="501,4378" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <TryCatch.Try>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="463,1664" sap2010:WorkflowViewState.IdRef="Sequence_175">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="s1" />
                                                              <Variable x:TypeArguments="x:String" Name="s2" />
                                                              <Variable x:TypeArguments="x:String" Name="s3" />
                                                              <Variable x:TypeArguments="x:String" Name="s4" />
                                                              <Variable x:TypeArguments="x:String" Name="S5" />
                                                              <Variable x:TypeArguments="x:String" Name="S6" />
                                                              <Variable x:TypeArguments="x:String" Name="s7" />
                                                              <Variable x:TypeArguments="x:String" Name="strTemplPath" />
                                                              <Variable x:TypeArguments="x:String" Name="strSummaryFolderPath" />
                                                              <Variable x:TypeArguments="x:String" Name="strFinalFilePath" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Sequence DisplayName="Email Extraction and Invoice Extraction for ALL Mills" sap:VirtualizedContainerService.HintSize="421,1572" sap2010:WorkflowViewState.IdRef="Sequence_174">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="x:String" Name="strIncominMatFilesavePath" />
                                                                <Variable x:TypeArguments="x:String" Name="strGRPOWizardFileName" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment Invoice BOE" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_189" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountNSCBOE").ToString)]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strMillName">BOE</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="PdfTempFileSaveFolder">[dicConfig("PdfTempFileSaveFolderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="PdfFinalFileSaveFolder">[dicConfig("PdfFinalFileSaveFolderNSCBOE").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-Get Email Attachment Invoice" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_208" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-Get Email Attachment.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrDestEmailFolder">[dicConfig("DestMailFolderNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="IntEmailCount">[Int32.MaxValue]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrMailFolderFrom">[dicConfig("InputMailFolderNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="StrEmailBodyFilter">[dicConfig("MailBodyFilterNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSubjectFilter">[dicConfig("MailSubjectFilterNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strEmailSenderfilter">[dicConfig("MailSenderNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="strEmailAttachmentcount">[CONVERT.ToInt32(dicConfig("MailAttachmentCountNSC").ToString)]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strMillName">NSC</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="PdfTempFileSaveFolder">[dicConfig("PdfTempFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="PdfFinalFileSaveFolder">[dicConfig("PdfFinalFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic BOE To Excel workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_207" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic BOE To Excel.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strBOEFileConvertor">[dicConfig("BOEConvertorFile").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strBOEExcelFolderPath">[dicConfig("strBOEExcelFilePath").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strTempIndividualPDFPGFolderPath">[dicConfig("strBOETempExtractionFolder").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strBOEPDFfolder">[dicConfig("PdfFinalFileSaveFolderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strBOEPdfConvertedFolder">[dicConfig("strBOEPDFConvertedFolder").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Invoice Processing  " sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_181" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Invoice Processing.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strpdfConvertededfolder">[dicConfig("PdfConvertedFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceConvertorFilePath">[dicConfig("InvoiceConvertorNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strInputPDFfileDirectory">[dicConfig("PdfFinalFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strExcelFileProcessingPath">[dicConfig("ExcelFinalFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strUnableToprocessFolder">[dicConfig("strNSCUnableToProcessFolderPdf").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Copy BOE Data to Invoice Excel workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_209" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Copy BOE Data to Invoice Excel.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strExcelBOEFileProcessingPath">[dicConfig("strBOEExcelFilePath").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="stBOEConvertedPath">[dicConfig("ExcelConvertedFileSaveFolderNSCBOE").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strExcelInvoiceFileProcessingPath">[dicConfig("ExcelFinalFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceGRPOProcessingFolder">[dicConfig("ExcelFilesProcessingFolderNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFileName">[strGRPOWizardFileName]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceBOEGRPOConvertor">[dicConfig("strNSCInvoiceGRPOConvertorTemplate").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strConvertedInvoiceFolder">[dicConfig("ExcelConvertedFileSaveFolderNSCInvoice").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_211" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP-Logic-SCAMS-Login.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic Download Incoming Material Report workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_212" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic Download Incoming Material Report.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportTemplate">[dicConfig("strIncomingMatReportTemplate").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strIncomingMatReportSaveFolder">[dicConfig("strIncomingMatReportSaveFolder").ToString]</InArgument>
                                                                  <OutArgument x:TypeArguments="x:String" x:Key="strIncominMatFilesavePath">[strIncominMatFilesavePath]</OutArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="IntIncomingMatDaysFilter">[convert.ToInt32(dicConfig("IntIncomingMaterialNoofDaysFilter").ToString)]</InArgument>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Logic - SAP Login workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_213" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Logic - SAP Login.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strsapfilelocation">[dicConfig("SAPApplicationPath").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strSAPUserName">[dicConfig("SAPUserName").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strSAPPwd">[dicConfig("SAPUserPassword").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Booking Navigation to GRPO Wizard and Download workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_214" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Booking Navigation to GRPO Wizard and Download.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strGRPWizardFileSavePath">[dicConfig("strGRPOWizardExcelFolder").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="intGRPOWizardDateFilter">[convert.ToInt32(dicConfig("intGRPOWizardDateFilter").ToString)]</InArgument>
                                                                  <OutArgument x:TypeArguments="x:String" x:Key="strGRPOWizardFileName">[strGRPOWizardFileName]</OutArgument>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:InvokeWorkflowFile>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AP Logic NSC Invoice Processing workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_210" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Code\AP Logic NSC Invoice Processing.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="dicConfig">[dicConfig]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strInvoiceProcessingFolder">[dicConfig("ExcelFilesProcessingFolderNSC").ToString]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strGRPOWizFileName">[strGRPOWizardFileName]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strIncomingMaterialFile">[strIncominMatFilesavePath]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="strSummaryFile">[dicConfig("strSummaryFile").ToString]</InArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                            </Sequence>
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="467,714" sap2010:WorkflowViewState.IdRef="Catch`1_30">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,645" sap2010:WorkflowViewState.IdRef="Sequence_176">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_126" Level="Fatal" Message="[&quot;Exception Occured at NSC Invoice Processing - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_248">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_249">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">["NSC Invoice State Failed - "+exception.Message]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_250">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_251">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <AddToCollection x:TypeArguments="x:String" Collection="[InvoiceProcessingList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_15" Item="Y" />
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </Catch>
                                                          <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="467,844" sap2010:WorkflowViewState.IdRef="Catch`1_31">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:ApplicationException">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="418,775" sap2010:WorkflowViewState.IdRef="Sequence_177">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_245">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_145" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_297">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_298">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_299">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_300">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_301">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="scg:List(x:String)">["NSC".ToString.Split(CChar(",")).ToList()]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </Catch>
                                                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="467,844" sap2010:WorkflowViewState.IdRef="Catch`1_32">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="418,775" sap2010:WorkflowViewState.IdRef="Sequence_178">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,683" sap2010:WorkflowViewState.IdRef="Sequence_262">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_149" Level="Fatal" Message="[&quot;Exception Occured at Invoice AP Booking - Exception Details: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_302">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_303">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_304">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_305">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_306">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="scg:List(x:String)">["NSC".ToString.Split(CChar(",")).ToList()]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Skip Invoice Mill" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_180">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_129" Level="Info" Message="[&quot;Invoice - &quot;+if(InvoiceProcessingList.Count&gt;0, InvoiceProcessingList(0).ToString,&quot;NA&quot;)]" />
                                                      <Assign DisplayName="Assign strExceptionType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_260">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">Success</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Assign bolWorkStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_261">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[bolWorkStatus]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <If Condition="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)]" DisplayName="Retry Mechanism" sap:VirtualizedContainerService.HintSize="1427,441" sap2010:WorkflowViewState.IdRef="If_41">
                                            <If.Then>
                                              <Sequence DisplayName="Retry Sequence" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_217">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_216">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_280">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_281">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[BoolRetryExecution]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_139" Level="Info" Message="[(DateTime.now-DateTimeProcessStartTime).TotalMinutes.tostring &amp; &quot; minutes have passed of alloted &quot; &amp; convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) &amp;&quot; mins.Hence Continuing execution&quot;]" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1427,91" sap2010:WorkflowViewState.IdRef="LogMessage_130" Level="Info" Message="[&quot;Invoice AP Booking  has completed - &quot;+DateTime.Now.ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </State.Entry>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">264,958.5</av:Point>
                                          <av:Size x:Key="ShapeSize">252,72</av:Size>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Double x:Key="StateContainerWidth">217.8377518557794</x:Double>
                                          <x:Double x:Key="StateContainerHeight">35.8427415689485</x:Double>
                                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <State.Transitions>
                                        <Transition sap2010:Annotation.AnnotationText="(DateTime.now-DateTimeProcessStartTime).TotalMinutes&gt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString) or not(bolworkstatus)" DisplayName="NSC END" sap:VirtualizedContainerService.HintSize="595,505" sap2010:WorkflowViewState.IdRef="Transition_43">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">264,994.5 45.2,994.5 45.2,217.5</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">3</x:Int32>
                                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </Transition.To>
                                          <Transition.Condition>[(not(BoolRetryExecution) or not(bolworkstatus)) and strExceptionType&lt;&gt;"BusinessException"]</Transition.Condition>
                                        </Transition>
                                        <Transition sap2010:Annotation.AnnotationText="(DateTime.now-DateTimeProcessStartTime).TotalMinutes&lt;convert.ToInt32(dicConfig(&quot;TotalExecutionTime&quot;).ToString)" DisplayName="Priority Loop" sap:VirtualizedContainerService.HintSize="479,971" sap2010:WorkflowViewState.IdRef="Transition_52">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">264,1005.3 236.2,1005.3 236.2,259.5 356.2,259.5 356.2,289.5</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">26</x:Int32>
                                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID0</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <Sequence sap:VirtualizedContainerService.HintSize="376,576" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:TimeSpan" Name="ExecutionRerundelay" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign All Mills for Execution" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_263">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[dicConfig("InvoiceProcessingRerunPriority").ToString.Split(CChar(",")).ToList()]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_283">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:TimeSpan">[ExecutionRerundelay]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:TimeSpan">[timespan.Parse(DicConfig("RerunInterval").ToString)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_140" Level="Info" Message="[&quot;Rerun Priority set as &quot; &amp; dicConfig(&quot;InvoiceProcessingRerunPriority&quot;).ToString]" />
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_141" Level="Info" Message="[&quot;Next Run Scheduled after &quot;&amp; ExecutionRerundelay.ToString(&quot;mm&quot;) &amp; &quot; Min.&quot;]" />
                                              <Delay Duration="[ExecutionRerundelay]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                            </Sequence>
                                          </Transition.Action>
                                          <Transition.Condition>[BoolRetryExecution]</Transition.Condition>
                                        </Transition>
                                        <Transition DisplayName="B.Excep NSC" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_54">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">516,1001.7 1185.3,1001.7 1185.3,429.5</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">63</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID2</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_146" Level="Info" Message="[&quot;Processed to Business Exception Handler&quot;]" />
                                          </Transition.Action>
                                          <Transition.Condition>[Not bolWorkStatus and strExceptionType="BusinessException"]</Transition.Condition>
                                        </Transition>
                                      </State.Transitions>
                                    </State>
                                  </Transition.To>
                                  <Transition.Action>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_134" Level="Info" Message="[&quot;JSW SUCCESS&quot;]" />
                                    </Sequence>
                                  </Transition.Action>
                                  <Transition.Condition>
                                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exSystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                                  </Transition.Condition>
                                </Transition>
                                <Transition DisplayName="JSW END" sap:VirtualizedContainerService.HintSize="595,505" sap2010:WorkflowViewState.IdRef="Transition_45">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">264,844.5 66.8,844.5 66.8,217.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">15</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID1</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </Transition.Action>
                                  <Transition.Condition>[(not(BoolRetryExecution) or not(bolworkstatus)) and strExceptionType&lt;&gt;"BusinessException"]</Transition.Condition>
                                </Transition>
                                <Transition DisplayName="B.Excep JSW" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_53">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">516,844.5 1135.1,844.5 1135.1,429.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">47</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID2</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_142" Level="Info" Message="[&quot;Processed to Business Exception Handler&quot;]" />
                                  </Transition.Action>
                                  <Transition.Condition>[Not bolWorkStatus and strExceptionType="BusinessException"]</Transition.Condition>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_185">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_133" Level="Info" Message="[&quot;POSCOM SUCCESS&quot;]" />
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exSystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="POSCOM END" sap:VirtualizedContainerService.HintSize="595,505" sap2010:WorkflowViewState.IdRef="Transition_46">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">274,693.6 88.4,693.6 88.4,217.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">27</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[(not(BoolRetryExecution) or not(bolworkstatus)) and strExceptionType&lt;&gt;"BusinessException"]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="B.Excep POSCOM" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_55">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">526,686.4 1097.45,686.4 1097.45,429.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID2</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_147" Level="Info" Message="[&quot;Processed to Business Exception Handler&quot;]" />
                          </Transition.Action>
                          <Transition.Condition>[Not bolWorkStatus and strExceptionType="BusinessException"]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_184">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_132" Level="Info" Message="[&quot;JCAPCP SUCCESS&quot;]" />
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exSystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="B.Excep JCAPCP" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_56">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">530.5,534.4 1047.25,534.4 1047.25,429.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">19</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID2</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_148" Level="Info" Message="[&quot;Processed to Business Exception Handler&quot;]" />
                  </Transition.Action>
                  <Transition.Condition>[Not bolWorkStatus and strExceptionType="BusinessException"]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_183">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_131" Level="Info" Message="[&quot;TATA SUCCESS&quot;]" />
            </Sequence>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exSystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID1</x:Reference>
    <State x:Name="__ReferenceID7" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap:VirtualizedContainerService.HintSize="254,61" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="Catch intialization exceptions" sap:VirtualizedContainerService.HintSize="919,4542" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Init State" sap:VirtualizedContainerService.HintSize="556,2568" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="514,91" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;Init State Process Started&quot;]" />
              <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="514,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[dicConfig is Nothing]" DisplayName="If first run - read Config file" sap:VirtualizedContainerService.HintSize="514,1035" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="First Run" sap:VirtualizedContainerService.HintSize="478,858" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="436,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="StrConfigFile">[StrConfigFile]</InArgument>
                        <InArgument x:TypeArguments="s:String[]" x:Key="ColConfigSheets">[{"Settings","Constants","Assets","SQMachineLine"}]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_262">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[DateTimeProcessStartTime]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="725,516" sap2010:WorkflowViewState.IdRef="Sequence_45">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap:VirtualizedContainerService.HintSize="683,392" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="641,269" sap2010:WorkflowViewState.IdRef="If_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Add OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[dicConfig("OrchestratorQueueName")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <ui:Comment sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="436,53" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="BusinessProcessName">[dicConfig("BusinessProcessName").ToString]</InArgument>
                      </ui:AddLogFields.Fields>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddLogFields>
                    <Assign DisplayName="Assign get Process Name" sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[dicConfig("InvoiceProcessingList").ToString.Split(CChar(",")).ToList()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,230" sap2010:WorkflowViewState.IdRef="CommentOut_25">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_227">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign get Process Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_282">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceProcessingList]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:List(x:String)">["".ToString.Split(CChar(",")).ToList()]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:CommentOut.Body>
                    </ui:CommentOut>
                  </Sequence>
                </If.Then>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="514,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="514,282" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="385,204" sap2010:WorkflowViewState.IdRef="Sequence_119">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke TPP-Logic-SCAMS-Login workflow" sap:VirtualizedContainerService.HintSize="343,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessLogic\TPP-Logic-SCAMS-Login.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="SCAMS_User_Name">[strSCAMSUser]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Password">[New System.Net.NetworkCredential(String.Empty,ssSCAMSPass).Password]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SCAMS_Path">[dicConfig("SCAMSApplicationPath").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:CommentOut sap2010:Annotation.AnnotationText="Get the code From Issac" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="514,465" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,356" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig">[dicConfig]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Read Input Excel workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Send Email.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="StrKillProcessList">iexplore,OUTLOOK,EXCEL</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="DicConfig" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Success</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[&quot;Init State Process Completed&quot;]" />
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="885,552" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,483" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Info" Message="[&quot;Init State Process Failed - &quot;+exception.Message]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="885,555" sap2010:WorkflowViewState.IdRef="Catch`1_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,485" sap2010:WorkflowViewState.IdRef="Sequence_47">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Info" Message="[&quot;Init State Process Failed - &quot;+exception.Message]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">BusinessException</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
            <Catch x:TypeArguments="s:ApplicationException" sap:VirtualizedContainerService.HintSize="885,555" sap2010:WorkflowViewState.IdRef="Catch`1_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:ApplicationException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:ApplicationException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="376,485" sap2010:WorkflowViewState.IdRef="Sequence_48">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Info" Message="[&quot;Init State Process Failed - &quot;+exception.Message]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exSystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Message" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Init State Process Failed - "+exception.Message]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Exception Type" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">ApplicationException</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">273,14</av:Point>
          <av:Size x:Key="ShapeSize">254,61</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">220</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="450,796" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <av:PointCollection x:Key="ConnectorLocation">400,75 400,105 395.5,105 395.5,289.5</av:PointCollection>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exSystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="System Error" sap:VirtualizedContainerService.HintSize="450,796" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">400,75 400,105 102.8,105 102.8,155.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + exSystemError.Message + &quot; at Source: &quot; + exSystemError.Source]" />
          </Transition.Action>
          <Transition.Condition>[exSystemError isNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Initialises System Exception" Name="exSystemError">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary to store all variables and constants" Name="dicConfig">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Stores Exception message which is emailed" Name="strExceptionMessage">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Store types of exception" Name="strExceptionType">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag to Update if Ready to process for AP booking" Name="bolWorkStatus">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag to stop bot in case of error" Name="bolShouldStop">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag for Exception Handling&#xA;" Name="bolEXHandler">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" sap2010:Annotation.AnnotationText="List which Initialises Mill priority  at which execution of AP booking Executes" Name="InvoiceProcessingList">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="Variable to Store start time of process to execute bot till scheduled duration" Name="DateTimeProcessStartTime">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag to reinitiate  execution of Bot  if time alloted for schedule is not complete" Name="BoolRetryExecution">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
    </StateMachine.Variables>
  </StateMachine>
</Activity>