<Activity mc:Ignorable="sap sap2010" x:Class="SPR_Logic_SQ_Shiftwise_Production_Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="DtSPR" Type="InArgument(sd:DataTable)" />
    <x:Property Name="IntProcessDate1" Type="InArgument(x:Int32)" />
    <x:Property Name="ArrShiftNo" Type="InArgument(s:String[])" />
    <x:Property Name="DateProcessDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="StrSPRTempFolder" Type="InArgument(x:String)" />
    <x:Property Name="StrSPRFinalOutputFile" Type="InOutArgument(x:String)" />
    <x:Property Name="StrSPRSharedFolder" Type="InArgument(x:String)" />
    <x:Property Name="DtPanaboard" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>979,5816</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SPR_Logic_SQ_Shiftwise_Production_Report_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Get SQ Line Panaboard details and generate SQ Line - Shiftwise Production Report&#xA;&#xA;Pre Condition: N/A&#xA;Post Condtion: N/A" DisplayName="SPR_Logic_SQ_Shiftwise_Production_Report" sap:VirtualizedContainerService.HintSize="989,5651" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bolPathExist" />
      <Variable x:TypeArguments="x:Int32" Name="intDate" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dtTemp" />
      <Variable x:TypeArguments="x:String" Name="strMachine" />
      <Variable x:TypeArguments="x:String" Name="strTeam" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="intI" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbSPRInstance" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSPROriginal" />
      <Variable x:TypeArguments="x:String" Name="strShift" />
      <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="strOutputSharedFile" />
      <Variable x:TypeArguments="s:String[]" Name="arrOldSPRFiles" />
      <Variable x:TypeArguments="x:String" Default="Clean_Up" Name="strMacroName" />
      <Variable x:TypeArguments="x:String" Default="SQ-1" Name="strSQ1SheetName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="genEmptyCheck" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="947,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;SQ SPR Generation Started&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="947,5225" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="SQ SPR Generation" sap:VirtualizedContainerService.HintSize="909,4998" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Pre Condition" sap:VirtualizedContainerService.HintSize="867,1050" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[StrSPRSharedFolder&lt;&gt;String.Empty]" DisplayName="If StrSPRSharedFolder is not Empty?" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="SPR File Path Validation" sap:VirtualizedContainerService.HintSize="526,429" sap2010:WorkflowViewState.IdRef="Sequence_37">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:PathExists DisplayName="Path Exists" Exists="[bolPathExist]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[StrSPRSharedFolder]" PathType="Folder">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:PathExists>
                  <If Condition="[bolPathExist]" DisplayName="If StrSPRSharedFolder Exists?" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Throw DisplayName="Throw - Ex" Exception="[New Exception(&quot;Incorrect SPR File's Shared Folder Path - &quot;+StrSPRSharedFolder)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw - SysEx" Exception="[New Exception(&quot;SPR File's Shared Folder Path is Empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
              </If.Else>
            </If>
            <If Condition="[StrSPRTempFolder&lt;&gt;String.Empty]" DisplayName="If StrSPRTempFolderPath is not Empty?" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="If_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="SPR File Path Validation" sap:VirtualizedContainerService.HintSize="526,448" sap2010:WorkflowViewState.IdRef="Sequence_38">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:PathExists DisplayName="Path Exists" Exists="[bolPathExist]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[StrSPRTempFolder]" PathType="Folder">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:PathExists>
                  <If Condition="[bolPathExist]" DisplayName="If StrSPRTemplatePath Exists?" sap:VirtualizedContainerService.HintSize="484,227" sap2010:WorkflowViewState.IdRef="If_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[StrSPRTempFolder]" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw - SysEx" Exception="[New Exception(&quot;SPR Fie's Temp Folder Path is Empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
              </If.Else>
            </If>
            <TryCatch DisplayName="Try Catch - SPR File Availability in shared folder" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <TryCatch.Try>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strOutputSharedFile]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Directory.GetFiles(StrSPRSharedFolder,"SQ"+"*"+DateProcessDate.ToString("MMMM-yyyy")+"*").OrderByDescending(Function(x) New FileInfo(x).creationtime).First()]</InArgument>
                  </Assign.Value>
                </Assign>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_39">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Error" Message="[&quot;SPR file not available in shared folder for processing Month&quot;]" />
                      <Throw DisplayName="Throw - SysEx" Exception="[New Exception(&quot;SPR file not available in shared folder for processing Month&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[StrSPRTempFolder+strOutputSharedFile.Substring(strOutputSharedFile.LastIndexOf(&quot;\&quot;),(strOutputSharedFile.Length-strOutputSharedFile.LastIndexOf(&quot;\&quot;)))]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="438,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[strOutputSharedFile]" />
            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
            <Sequence DisplayName="DT of all Shifts" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataTable">[dtSPROriginal]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataTable">[DtSPR]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;DTSPROriginal: &quot;+DtSPR.rows.count.ToString]" />
            </Sequence>
            <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EXCEL" />
            <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
          </Sequence>
          <TryCatch DisplayName="Try Catch- Open SPRFile" sap:VirtualizedContainerService.HintSize="867,51" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="888,124" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" Visible="False" Workbook="[wbSPRInstance]" WorkbookPath="[StrSPRTempFolder+strOutputSharedFile.Substring(strOutputSharedFile.LastIndexOf(&quot;\&quot;),(strOutputSharedFile.Length-strOutputSharedFile.LastIndexOf(&quot;\&quot;)))]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="892,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <TryCatch DisplayName="Try Catch-Exception1" sap:VirtualizedContainerService.HintSize="964,527" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence DisplayName="Exception1" sap:VirtualizedContainerService.HintSize="930,340" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="888,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
                        <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="888,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                        <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="888,124" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" Visible="False" Workbook="[wbSPRInstance]" WorkbookPath="[StrSPRTempFolder+strOutputSharedFile.Substring(strOutputSharedFile.LastIndexOf(&quot;\&quot;),(strOutputSharedFile.Length-strOutputSharedFile.LastIndexOf(&quot;\&quot;)))]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="934,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Exception2" sap:VirtualizedContainerService.HintSize="930,300" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="888,22" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="EXCEL" />
                            <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="888,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                            <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="888,124" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" Visible="False" Workbook="[wbSPRInstance]" WorkbookPath="[StrSPRTempFolder+strOutputSharedFile.Substring(strOutputSharedFile.LastIndexOf(&quot;\&quot;),(strOutputSharedFile.Length-strOutputSharedFile.LastIndexOf(&quot;\&quot;)))]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" ExistingWorkbook="[wbSPRInstance]" sap:VirtualizedContainerService.HintSize="867,2832" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" Visible="False">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="833,2723" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[IntProcessDate1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="791,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[intDate+4]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="791,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="[strMacroName]" MacroParameters="[{intDate}]" />
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="791,2332" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ArrShiftNo]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Work - SPR" sap:VirtualizedContainerService.HintSize="755,2199" sap2010:WorkflowViewState.IdRef="Sequence_48">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strShift]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[DtPanaboard.AsEnumerable().Where(function(r) r(&quot;Shift&quot;).ToString=strShift).Count&gt;0]" DisplayName="If Panaboard Actual Details for Shift Available?" sap:VirtualizedContainerService.HintSize="713,2007" sap2010:WorkflowViewState.IdRef="If_17">
                            <If.Then>
                              <Sequence DisplayName="Work" sap:VirtualizedContainerService.HintSize="568,1860" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sd:DataTable">[DtSPR]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sd:DataTable">[New DataTable()]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign DTSPR-Processing Shift" sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sd:DataTable">[DtSPR]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sd:DataTable">[dtSPROriginal.AsEnumerable().Where(function(r) r("Shift").ToString=strShift).CopyToDataTable]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="526,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Consolidated SPR post Shift Filter&quot;+DTSPR.Rows.Count.ToString]" />
                                <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Switch x:TypeArguments="x:String" DisplayName="Switch - Identifying Team" Expression="[DtSPR.Rows(0).Item(&quot;Team&quot;).ToString]" sap:VirtualizedContainerService.HintSize="526,181" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                  <Switch.Default>
                                    <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[&quot;B&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="918,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_7" SheetName="[strSQ1SheetName]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If A is Empty?" sap:VirtualizedContainerService.HintSize="918,545" sap2010:WorkflowViewState.IdRef="If_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">A</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="611,398" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadCell Cell="[&quot;I&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="[strSQ1SheetName]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                            <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If B is Empty?" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_15">
                                              <If.Then>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">B</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                              <If.Else>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">C</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </Switch.Default>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence x:Key="A" sap:VirtualizedContainerService.HintSize="960,66" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;B&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="918,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[strSQ1SheetName]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                    <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If A is Empty?" sap:VirtualizedContainerService.HintSize="918,545" sap2010:WorkflowViewState.IdRef="If_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">A</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="611,398" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadCell Cell="[&quot;I&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[strSQ1SheetName]">
                                            <ui:ExcelReadCell.Result>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                            </ui:ExcelReadCell.Result>
                                          </ui:ExcelReadCell>
                                          <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If B is Empty?" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_9">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">B</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">C</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                  <Sequence x:Key="B" sap:VirtualizedContainerService.HintSize="960,736" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;I&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="918,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[strSQ1SheetName]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                    <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If B is Empty?" sap:VirtualizedContainerService.HintSize="918,545" sap2010:WorkflowViewState.IdRef="If_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">B</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="611,398" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadCell Cell="[&quot;P&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[strSQ1SheetName]">
                                            <ui:ExcelReadCell.Result>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                            </ui:ExcelReadCell.Result>
                                          </ui:ExcelReadCell>
                                          <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If C is Empty?" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_11">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">C</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">A</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                  <Sequence x:Key="C" sap:VirtualizedContainerService.HintSize="960,736" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;P&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="918,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="[strSQ1SheetName]">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                    <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If C is Empty?" sap:VirtualizedContainerService.HintSize="918,545" sap2010:WorkflowViewState.IdRef="If_14">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">C</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="611,398" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadCell Cell="[&quot;B&quot;+intDate.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="[strSQ1SheetName]">
                                            <ui:ExcelReadCell.Result>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[genEmptyCheck]</OutArgument>
                                            </ui:ExcelReadCell.Result>
                                          </ui:ExcelReadCell>
                                          <If Condition="[genEmptyCheck=String.Empty]" DisplayName="If A is Empty?" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_13">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">A</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strTeam]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">B</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </Switch>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="526,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Processing SPR for Team:&quot; + strTeam]" />
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="526,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Processing date received:&quot; +IntProcessDate1.ToString]" />
                                <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intI]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,754" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <While sap:VirtualizedContainerService.HintSize="484,600" sap2010:WorkflowViewState.IdRef="While_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <While.Condition>
                                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="intI&lt;10" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                                    </While.Condition>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,443" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strMachine]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["SQ"+intI.ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[DtSPR.Select("[Machine]='"+strMachine+"'").CopyToDataTable]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[strTeam.ToUpper.Trim]" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence x:Key="A" DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelWriteCell Cell="[&quot;B&quot;+intDate.ToString]" DisplayName="Write Cell Actual Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;D&quot;+intDate.ToString]" DisplayName="Write Cell Breakdown Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Breakdown Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;E&quot;+intDate.ToString]" DisplayName="Write Cell Total Line Pass Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_34" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total line pass weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;F&quot;+intDate.ToString]" DisplayName="Write Cell Total FG Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_35" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total FG weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;G&quot;+intDate.ToString]" DisplayName="Write Cell Actual Strokes" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_36" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Strokes&quot;).ToString]" />
                                        </Sequence>
                                        <Sequence x:Key="B" DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelWriteCell Cell="[&quot;I&quot;+intDate.ToString]" DisplayName="Write Cell Actual Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;K&quot;+intDate.ToString]" DisplayName="Write Cell Breakdown Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Breakdown Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;L&quot;+intDate.ToString]" DisplayName="Write Cell Total Line Pass Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total line pass weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;M&quot;+intDate.ToString]" DisplayName="Write Cell Total FG Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total FG weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;N&quot;+intDate.ToString]" DisplayName="Write Cell Actual Strokes" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Strokes&quot;).ToString]" />
                                        </Sequence>
                                        <Sequence x:Key="C" DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelWriteCell Cell="[&quot;P&quot;+intDate.ToString]" DisplayName="Write Cell Actual Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;R&quot;+intDate.ToString]" DisplayName="Write Cell Breakdown Time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Breakdown Time&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;S&quot;+intDate.ToString]" DisplayName="Write Cell Total Line Pass Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total line pass weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;T&quot;+intDate.ToString]" DisplayName="Write Cell Total FG Weight" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Total FG weight&quot;).ToString]" />
                                          <ui:ExcelWriteCell Cell="[&quot;U&quot;+intDate.ToString]" DisplayName="Write Cell Actual Strokes" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="[&quot;SQ-&quot;+intI.ToString]" Text="[dtTemp.Rows(0).Item(&quot;Actual Strokes&quot;).ToString]" />
                                        </Sequence>
                                      </Switch>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[intI]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[intI+1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </While>
                                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_4" />
                                </Sequence>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="867,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[wbSPRInstance]" />
          <Assign sap:VirtualizedContainerService.HintSize="867,60" sap2010:WorkflowViewState.IdRef="Assign_20">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[StrSPRFinalOutputFile]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format(StrSPRFinalOutputFile,DateProcessDate.ToString("dd-MMMM-yyyy")+" "+DateTime.Now.ToString("hh.mm tt"))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[StrSPRFinalOutputFile]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="867,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[StrSPRTempFolder+strOutputSharedFile.Substring(strOutputSharedFile.LastIndexOf(&quot;\&quot;),(strOutputSharedFile.Length-strOutputSharedFile.LastIndexOf(&quot;\&quot;)))]" />
          <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="680,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
          <Assign sap:VirtualizedContainerService.HintSize="680,60" sap2010:WorkflowViewState.IdRef="Assign_21">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[arrOldSPRFiles]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(StrSPRSharedFolder,"SQ"+"*"+DateProcessDate.ToString("MMMM-yyyy")+"*").where(Function(x) new FileInfo(x).Creationtime.Date&lt;Datetime.Now.Date).ToArray()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeCode Code="Array.ForEach(arrOldSPRFiles,Sub(x) File.Delete(x))" ContinueOnError="True" DisplayName="Invoke code-Delete Previous Files" sap:VirtualizedContainerService.HintSize="522,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="s:String[]" x:Key="arrOldSPRFiles">[arrOldSPRFiles]</InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="522,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;SPR-Logic-SQ SPR Generation Completed Successfully&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="568,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;SQ SPR Generation Failed, Exception Details : &quot;+exception.Message]" />
              <Throw DisplayName="Throw SysEx" Exception="[New Exception(&quot;SQ SPR Generation Failed, Exception Details : &quot;+exception.Message)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="902,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;SQ SPR Generation Ended&quot;]" />
  </Sequence>
</Activity>